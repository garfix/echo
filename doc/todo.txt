Ooit:

 * 1st person (in artikel voorbeeld => 3rd person)
 * De zinseinde-detectie is te beperkt (zoeken naar een punt)
 * Maak includes
 * Regelnummers in parse foutmeldingen
 * Veel datastructuren moeten immutable zijn; vervang setters daarom door constructor parameters

 Zorg ervoor dat het compleet, simpel en robuust is. Dat is veel belangrijker dan dat het bijzondere dingen kan!!!

Volgende zinnen:
* Maak een zin waarin een bijvoeglijk naamwoord voorkomt.
* Maak een zin waarin een bijwoord voorkomt.
* Maak een zin waarin een een determiner relevant is (Bv. geef me alle inwoners van London ouder dan 80 jaar)
* "When did Lord Byron pass away?" -> interpret the expression into 'die'
* Was Cleopatra older than all of her husbands?

Nu:

* De niet-web code is nog niet UNICODE-proof
* Zorg ervoor dat de regels in lexicons en maps gecheckt wordt op betekenis (NP.bla <- error)
* Property: 'object' hoeft geen zelfstandig object te zijn, alleen de naam is relevant, toch?
* Vereenvoudig de datastructuren voor parse en generation regels
* Maak een speciale relation mapping van vraag-zin en antwoord, naar antwoordzin (nu wordt dit nog in code uitgeschreven)
* los alle #todo's op in de code
* is het nodig om een S.request te hebben? Een request() relatie is toch genoeg?
* Verwijder die() statements