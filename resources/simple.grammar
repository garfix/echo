[
	// John drives / She died

	rule:
		S => NP VP,
	features: {
		S: { head: ?h1 { sentenceType: 'declarative', voice: 'active', clause: ?s1 } },
		NP: { head: { agreement: ?agr, syntax: ?syntax } },
		VP: { head: ?h1 { agreement: ?agr, syntax: ?s1 { deepSubject: ?syntax } } }
	},
	semantics: {
		S.sem = NP.sem and VP.sem and subject(S.event, S.subject);
    	S.event = VP.event;
    	S.subject = NP.object
	}
]

[
	// Lady Lovelace was born

	// NOT USED?

	rule:
		S => NP aux VP,
	features: {
		S: { head: ?h1 { sentenceType: 'declarative', voice: 'active', clause: ?s1 } },
		NP: { head: { agreement: ?agr, syntax: ?syntax } },
		aux: { },
		VP: { head: ?h1 { agreement: ?agr, syntax: ?s1 { deepSubject: ?syntax } } }
	}
]

[
	// Drive! / Book that flight / She died

	rule:
		S => VP,
	features: {
		S: { head: { sentenceType: 'imperative', clause: ?s1 } },
		VP: { head: { syntax: ?s1 } }
	},
	semantics: {
		S.sem = VP.sem and object(S.event, S.object);
		S.event = VP.event;
		S.object = VP.object
	}
]

[
	// Who Is John? / How many children had Lord Byron?

	rule:
		S => WhADVP VP NP,
	features: {
		S: { head: ?h1 { sentenceType: 'wh-question', voice: 'active', clause: ?s1 } },
		WhADVP: { head: { syntax: ?s1 } },
		VP: { head: ?h1 { syntax: ?s1 { deepSubject: ?s2}, agreement: ?agr } },
		NP: { head: { syntax: ?s2, agreement: ?agr } }
	},
	semantics: {
		S.sem = WhADVP.sem and VP.sem and NP.sem and subject(S.event, S.subject) and object(S.event, S.object) and request(S.request);
        S.event = VP.event;
        S.subject = NP.object;
        S.object = WhADVP.object;
        S.request = WhADVP.request
	}
]

[
	// Where was John born?

	rule:
        S => WhADVP auxPsv NP VP,
    features: {
        S: { head: ?h1 { sentenceType: 'wh-question', voice: 'passive', clause: ?s1 } },
        WhADVP: { head: { syntax: ?s1 } },
        auxPsv: {},
        NP: { head: { syntax: ?s2, agreement: ?agr } },
        VP: { head: ?h1 { syntax: ?s1 { deepDirectObject: ?s2}, agreement: ?agr } }
    },
    semantics: {
		S.sem = WhADVP.sem and auxPsv.sem and NP.sem and VP.sem and object(S.event, S.object) and request(S.request);
		S.event = WhADVP.event;
		S.event = VP.event;
		S.object = NP.object;
		S.request = WhADVP.request
    }

]

[
	// Was John driving?

	rule:
        S => aux NP VP,
    features: {
        S: { head: ?h1 { sentenceType: 'yes-no-question', voice: 'active', clause: ?s3 } },
        aux: { head: { agreement: ?agr } },
        NP: { head: { agreement: ?agr, syntax: ?s1 } },
        VP: { head: ?h1 { agreement: ?agr, syntax: ?s3 { deepDirectObject: ?s1 } } }
    },
    semantics: {
		S.sem = NP.sem and VP.sem and subject(S.event, S.subject);
		S.event = VP.event;
		S.subject = NP.object
    }
]

[
	// Was the car driven by John?

	rule:
        S => aux NP1 VP passivisationPreposition NP2,
    features: {
        S: { head: ?h1 { sentenceType: 'yes-no-question', voice: 'passive', clause: ?s3 } },
        aux: { },
        NP1: { head: { agreement: ?agr, syntax: ?s1 } },
        VP: { head: ?h1 { agreement: ?agr, syntax: ?s3 { predicate: ?p, deepSubject: ?s2, deepDirectObject: ?s1 } } },
        passivisationPreposition: {},
        NP2: { head: { syntax: ?s2 }}
    },
    semantics: {
        S.sem = NP1.sem and NP2.sem and VP.sem and subject(S.event, S.subject) and object(S.event, S.object);
        S.event = VP.event;
        S.subject = NP2.object;
        S.object = NP1.object
    }
]

[
	// Was John a fool?
	// Was Ada Lovelace the daughter of Lord Byron?

	rule:
        S => aux NP1 NP2,
    features: {
        S: { head: ?h1 { sentenceType: 'yes-no-question', voice: 'active', clause: ?s3 } },
        aux: { head: ?h1 { syntax: ?s3 { type: 'clause', deepSubject: ?s1, deepDirectObject: ?s2 }} },
        NP1: { head: { syntax: ?s1 } },
        NP2: { head: { syntax: ?s2 } }
    },
    semantics: {
       S.sem = aux.sem and NP1.sem and NP2.sem and subject(S.event, S.subject);
       S.subject = NP2.object;
       S.subject = NP1.object
    }

]

[
	// How old was Mary Shelley?

	rule:
        S => WhADVP auxBe NP,
    features: {
        S: { head: ?h1 { sentenceType: 'wh-question', voice: 'active', clause: ?s3, relativeClause: ?s4 } },
        WhADVP: { head: { syntax: ?s3 } },
        auxBe: { head: ?h1 { agreement: ?agr, syntax: ?s3 { type: 'clause', deepSubject: ?s1 } } },
        NP: { head: { agreement: ?agr, syntax: ?s1 } }
    },
    semantics: {
        S.sem = WhADVP.sem and auxBe.sem and NP.sem and subject(S.event, S.subject) and request(S.request);
        S.event = WhADVP.object;
        S.event = auxBe.event;
        S.subject = NP.object;
        S.request = WhADVP.request
    }

]

[
	// How old was Mary Shelley when she died?

	rule:
		S1 => S2 SBar,
	features: {
		S1: { head: ?h1 { relativeClause: ?s1 } },
		S2: { head: ?h1 },
		SBar: { head: { syntax: ?s1 } }
	},
	semantics: {
		S1.sem = S2.sem and SBar.sem;
		S1.event = S2.event;
		S1.subject = S2.subject;
		S1.object = S2.object;
		S1.event = SBar.superEvent;
		S1.request = S2.request
	}
]

				// How old was Mary Shelley when she died?
//				array(
//					array('cat' => 'S', 'features' => array('head{?h1}' => array('relativeClause' => '?syntax-1')),
//# todo: should accept S1 and S2
//'semantics' => '{
//	S.sem = S.sem and SBar.sem;
//	S.event = S.event;
//	S.subject = S.subject;
//	S.object = S.object;
//	S.event = SBar.superEvent;
//	S.request = S.request
//}'
//
//					),
//					array('cat' => 'S', 'features' => array('head{?h1}' => null)),
//					array('cat' => 'SBar', 'features' => array('head' => array('syntax' => '?syntax-1'))),
//				)

// next rules: try to remove stuff!!