// how old
manner(?e, ?q) and isa(?e, Old) => subject(?e, ?s) and born(?s, ?b) and time(?e, ?t) and let(?q, daysToYears(subtractDates(?t, ?b)));

// same time
time(?e, ?t) => at_time(?e, ?f) and time1(?f, ?t);

// ??
time1(?e, ?t) => isa(?e, Die) and subject(?e, ?s) and die(?s, ?t);

// how many
manner(?o, ?q) and many(?o) => aggregate(?q, count(?o));

// name (imperative)
isa(?e, Name) and object(?e, ?o) => name(?o, ?n) and request(?n)